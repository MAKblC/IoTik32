#include <WiFi.h>  // –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è Wi-Fi
#include <WiFiClientSecure.h>
#include <UniversalTelegramBot.h>                           // –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¢–µ–ª–µ–≥—Ä–∞–º
#define WIFI_SSID "XXXXX"                                   // –ª–æ–≥–∏–Ω Wi-Fi
#define WIFI_PASSWORD "XXXXXXXXXXXX"                        // –ø–∞—Ä–æ–ª—å Wi-Fi
#define BOT_TOKEN "917994990:XXXXXXXXXXXXXXXXXXr-RPiM4PUc"  // —Ç–æ–∫–µ–Ω
const unsigned long BOT_MTBS = 1000;                        // –≤—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
WiFiClientSecure secured_client;                            // –∫–ª–∏–µ–Ω—Ç SSL (TLS)
UniversalTelegramBot bot(BOT_TOKEN, secured_client);        // —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
unsigned long bot_lasttime;                                 // —Å—á–µ—Ç—á–∏–∫ –≤—Ä–µ–º–µ–Ω–∏

#define LED 18  // 4

String keyboardJson1 = "[[{ \"text\" : \"–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è\", \"callback_data\" : \"/options\" }],[{ \"text\" : \"–°—Å—ã–ª–∫–∏\", \"callback_data\" : \"/site\" }]]";
String keyboardJson2 = "[[{ \"text\" : \"c–∞–π—Ç MGBot\", \"url\" : \"https://mgbot.ru\" },{ \"text\" : \"—Å–∞–π—Ç –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞\", \"url\" : \"https://www.iotik.ru\" }],[{ \"text\" : \"‚ò∞ –ú–µ–Ω—é\", \"callback_data\" : \"/menu\" }]]";
String keyboardJson3 = "[[{ \"text\" : \"–í–∫–ª—é—á–∏—Ç—å —Å–≤–µ—Ç–æ–¥–∏–æ–¥\", \"callback_data\" : \"/ledon\" },{ \"text\" : \"–í—ã–∫–ª—é—á–∏—Ç—å —Å–≤–µ—Ç–æ–¥–∏–æ–¥\", \"callback_data\" : \"/ledoff\" }],[{ \"text\" : \"–î–∞–Ω–Ω—ã–µ –¥–∞—Ç—á–∏–∫–∞ –•–æ–ª–ª–∞\", \"callback_data\" : \"/hall\" }],[{ \"text\" : \"‚ò∞ –ú–µ–Ω—é\", \"callback_data\" : \"/menu\" }]]";

void setup() {
  Serial.begin(115200);
  pinMode(LED, OUTPUT);
  delay(512);
  Serial.println();
  Serial.print("Connecting to Wifi SSID ");
  Serial.print(WIFI_SSID);
  WiFi.begin(WIFI_SSID, WIFI_PASSWORD);                 // –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
  secured_client.setCACert(TELEGRAM_CERTIFICATE_ROOT);  // —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
  while (WiFi.status() != WL_CONNECTED)                 // –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
  {
    Serial.print(".");
    delay(500);
  }
  Serial.print("\nWiFi connected. IP address: ");
  Serial.println(WiFi.localIP());
}

void loop() {
  if (millis() - bot_lasttime > BOT_MTBS)  // –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
  {
    // –ø–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –æ—á–µ—Ä–µ–¥—å –æ–±—Ä–∞–±–æ—Ç–∫–∏
    int numNewMessages = bot.getUpdates(bot.last_message_received + 1);
    // –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏—à–ª–æ
    while (numNewMessages) {
      Serial.println("got response");
      handleNewMessages(numNewMessages);
      numNewMessages = bot.getUpdates(bot.last_message_received + 1);
    }
    // –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç–∏ –æ–ø—Ä–æ—Å–∞
    bot_lasttime = millis();
  }
}

// —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
void handleNewMessages(int numNewMessages) {
  Serial.print("handleNewMessages ");
  Serial.println(numNewMessages);
  // –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
  for (int i = 0; i < numNewMessages; i++) {
    String chat_id = bot.messages[i].chat_id;      // ID —á–∞—Ç–∞
    String text = bot.messages[i].text;            // —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    text.toLowerCase();                            // –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç –≤ –Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä
    String from_name = bot.messages[i].from_name;  // –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (from_name == "")
      from_name = "Guest";
    // –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
    if (text == "/ledon") {
      digitalWrite(LED, HIGH);
      bot.sendMessage(chat_id, "–°–≤–µ—Ç–æ–¥–∏–æ–¥ –≤–∫–ª—é—á–µ–Ω", "");
    }
    if (text == "/ledoff") {
      digitalWrite(LED, LOW);
      bot.sendMessage(chat_id, "–°–≤–µ—Ç–æ–¥–∏–æ–¥ –≤—ã–∫–ª—é—á–µ–Ω", "");
    }
    if (text == "/hall") {
      float val = hallRead();
      bot.sendMessage(chat_id, String(val, 1), "");
    }
    if (text == "/menu") {
      // –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–∞–Ω–µ–ª–∏
      bot.sendMessageWithInlineKeyboard(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª", "", keyboardJson1);
    }
    if (text == "/marking") {
      String sms = "*–ø–∏—Å–∞—Ç—å –∂–∏—Ä–Ω—ã–º —à—Ä–∏—Ñ—Ç–æ–º*\n";
      sms += "_–ø–∏—Å–∞—Ç—å –∫—É—Ä—Å–∏–≤–æ–º_\n";
      sms += "`–≤—Å—Ç–∞–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç –∫–æ–¥–∞`\n";
      sms += "–°—Å—ã–ª–∫–∞ –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç @MGBotCommunity\n";
      sms += "–ü—Ä—è–º–∞—è —Å—Å—ã–ª–∫–∞ mgbot.ru\n";
      sms += "[–ì–∏–ø–µ—Ä—Å—Å—ã–ª–∫–∞ —Å —ç–º–æ–¥–∑–∏ üåéüì≤](https://mgbot.ru)\n";
      bot.sendMessageWithInlineKeyboard(chat_id, sms, "Markdown", keyboardJson1);
    }
    if (text == "/markingv2") {
      String sms = "~–∑–∞—á–µ—Ä–∫–Ω—É—Ç—ã–π —Ç–µ–∫—Å—Ç~\n";
      sms += "__–ø–æ–¥—á–µ—Ä–∫–Ω—É—Ç—ã–π —Ç–µ–∫—Å—Ç__\n";
      sms += "||—Å–ø–æ–π–ª–µ—Ä||\n";
      bot.sendMessageWithInlineKeyboard(chat_id, sms, "MarkdownV2", keyboardJson1);
    }
    if (text == "/options") {
      // –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–∞–Ω–µ–ª–∏
      bot.sendMessageWithInlineKeyboard(chat_id, "*–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É*", "Markdown", keyboardJson3);
    }
    if (text == "/site") {
      // –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–∞–Ω–µ–ª–∏
      bot.sendMessageWithInlineKeyboard(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ —Å–∞–π—Ç", "", keyboardJson2);
    }
    if (text == "/start") {
      String sms = "–ü—Ä–∏–≤–µ—Ç üëã, " + from_name + "!\n";
      sms += "–Ø –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –ô–æ—Ç–∏–∫ 32. –Ø –ø—Ä–∏–Ω–∏–º–∞—é —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n\n";
      sms += "/options - –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è\n";
      sms += "/site - —Å—Å—ã–ª–∫–∏\n";
      sms += "/marking - –≤–∞—Ä–∏–∞–Ω—Ç—ã —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞\n";
      sms += "/markingv2 - –≤–∞—Ä–∏–∞–Ω—Ç—ã —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞\n";
      bot.sendMessage(chat_id, sms, "");
    }
  }
}
